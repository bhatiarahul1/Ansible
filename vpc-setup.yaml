- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
   - name: Import VPC variables
     include_vars: vars/vpc_setup

   - name: Create DevOps VPC
     ec2_vpc_net:
       name: "{{vpc_name}}"
       cidr_block: "{{vpcCidr}}"
       region: "{{region}}"
       dns_support: yes
       dns_hostnames: yes
       tenancy: default
       state: "{{state}}"
     register: vpc_out

   - name: Creating public subnet1
     ec2_vpc_subnet:
         vpc_id: "{{vpc_out.vpc.id}}"
         region: "{{region}}"
         az: "{{zone1}}"
         state: "{{state}}"
         cidr: "{{PubSub1}}"
         map_public: yes
         tags:
           Name: devops-publicsubnet-1
     register: pubsub1_out

   - name: Creating public subnet2
     ec2_vpc_subnet:
              vpc_id: "{{vpc_out.vpc.id}}"
              region: "{{region}}"
              az: "{{zone2}}"
              state: "{{state}}"
              cidr: "{{PubSub2}}"
              map_public: yes
              tags:
                Name: devops-publicsubnet-2
     register: pubsub2_out

   - name: Creating public subnet3
     ec2_vpc_subnet:
              vpc_id: "{{vpc_out.vpc.id}}"
              region: "{{region}}"
              az: "{{zone3}}"
              state: "{{state}}"
              cidr: "{{PubSub3}}"
              map_public: yes
              tags:
                Name: devops-publicsubnet-3
     register: pubsub3_out

   - name: Creating private subnet1
     ec2_vpc_subnet:
              vpc_id: "{{vpc_out.vpc.id}}"
              region: "{{region}}"
              az: "{{zone1}}"
              state: "{{state}}"
              cidr: "{{PrivSub1}}"
              map_public: yes
              tags:
                Name: devops-privatesubnet-1
     register: privsub1_out

   - name: Creating private subnet2
     ec2_vpc_subnet:
                   vpc_id: "{{vpc_out.vpc.id}}"
                   region: "{{region}}"
                   az: "{{zone2}}"
                   state: "{{state}}"
                   cidr: "{{PrivSub2}}"
                   map_public: yes
                   tags:
                     Name: devops-privatesubnet-2
     register: privsub2_out


   - name: Creating private subnet3
     ec2_vpc_subnet:
                   vpc_id: "{{vpc_out.vpc.id}}"
                   region: "{{region}}"
                   az: "{{zone3}}"
                   state: "{{state}}"
                   cidr: "{{PrivSub3}}"
                   map_public: yes
                   tags:
                     Name: devops-privatesubnet-3
     register: privsub3_out

   - name: Creating IGW
     ec2_vpc_igw:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: devops-IGW
     register: IGW_Out

   - name: Creating route tables for Public subnet
     ec2_vpc_route_table:
         vpc_id: "{{vpc_out.vpc.id}}"
         region: "{{region}}"
         state: "{{state}}"
         tags:
           Name: devops-IGWroute
         subnets:
           - "{{ pubsub1_out.subnet.id }}"
           - "{{ pubsub2_out.subnet.id }}"
           - "{{ pubsub3_out.subnet.id }}"
         routes:
           - dest: 0.0.0.0/0
             gateway_id: "{{ IGW_Out.gateway_id }}"
     register: public_route_table

   - name: Create NAT GW
     ec2_vpc_nat_gateway:
         state: "{{state}}"
         subnet_id: "{{ pubsub1_out.subnet.id }}"
         wait: yes
         region: "{{region}}"
         if_exist_do_not_create: true
     register: NAT_GW

   - name: Creating route table for Private subnet
     ec2_vpc_route_table:
              vpc_id: "{{vpc_out.vpc.id}}"
              region: "{{region}}"
              state: "{{state}}"
              tags:
                Name: devops-NATroute
              subnets:
                - "{{ privsub1_out.subnet.id }}"
                - "{{ privsub2_out.subnet.id }}"
                - "{{ privsub3_out.subnet.id }}"
              routes:
                - dest: 0.0.0.0/0
                  gateway_id: "{{ NAT_GW.nat_gateway_id }}"
     register: private_route_table

   - degub:
       var: "{{item}}"
     loop:
       - vpc_out.vpc.id
       - pubsub1_out.subnet.id
       - pubsub2_out.subnet.id
       - pubsub3_out.subnet.id
       - privsub1_out.subnet.id
       - privsub2_out.subnet.id
       - privsub3_out.subnet.id
       - NAT_GW.nat_gateway_id
       - IGW_Out.gateway_id
       - privat_route_table.route_table.id
       - public_route_table.route_table.id

   - set_fact:
          vpcid: "{{vpc_out.vpc.id}}"
          pubsub1id: "{{pubsub1_out.subnet.id}}"
          pubsub2id: "{{pubsub2_out.subnet.id}}"
          pubsub3id: "{{pubsub3_out.subnet.id}}"
          privsub1id: "{{privsub1_out.subnet.id}}"
          privsub2id: "{{privsub2_out.subnet.id}}"
          privsub3id: "{{privsub3_out.subnet.id}}"
          natgwid: "{{NAT_GW.nat_gateway_id}}"
          igwid: "{{IGW_Out.gateway_id}}"
          privrtid: "{{privat_route_table.route_table.id}}"
          pubrtid: "{{public_route_table.route_table.id}}"
          cacheable: yes

   - name: Create variable file with vpc output
     copy:
        content: "vpcid: {{vpc_out.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\nprivsub3id: {{privsub3_out.subnet.id}}\nnatgwid: {{NAT_GW.nat_gateway_id}}\nigwid: {{IGW_Out.gateway_id}}\nprivrtid: {{privat_route_table.route_table.id}}\npubrtid: {{public_route_table.route_table.id}}"
        dest: vars/output_vars














